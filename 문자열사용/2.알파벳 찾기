[문제]
알파벳 소문자로만 이루어진 단어 S가 주어진다. 각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성하시오
각각의 알파벳에 대해서, a가 처음 등장하는 위치, b가 처음 등장하는 위치, ... z가 처음 등장하는 위치를 공백으로 구분해서 출력한다.
만약, 어떤 알파벳이 단어에 포함되어 있지 않다면 -1을 출력한다. 단어의 첫 번째 글자는 0번째 위치이고, 두 번째 글자는 1번째 위치이다.
[코딩]
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		int en[] = new int[26];
		String S = scn.nextLine().toLowerCase();
		for (int i = 0; i < en.length; i++) {
			for (int j = 0; S.length() > j; j++) {
				if ((char) (97 + i) == S.charAt(j)) {
					en[i] = j;
					break;
				} else {
					en[i] = -1;
				}
			}
		} // baekjoon
		for (int k = 0; en.length > k; k++) {
			System.out.print(en[k] + " ");
		}
	}
}
[결과]
baekjoon
1 0 -1 -1 2 -1 -1 -1 -1 4 3 -1 -1 7 5 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 
